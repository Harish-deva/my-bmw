var onepageConsentlessTracking = function() {
    var config;
    function v(e) {
        return (e = RegExp("[?&]" + e + "=([^&]*)").exec(window.location.search)) && decodeURIComponent(e[1].replace(/\+/g, " "))
    }
    function exp(e) {
    }
    function createServerCall(pageName, loginStatus, type, n, dynamicData) {
        var i = [],
            a = (new Date).getTime(),
            c = "https://" + config.trackingServer + "/b/ss/" + config.reportSuite + "/1/JS-1.7.0-D7QN/s" + a + "?",
            d = window.location.href,
            l = new Date,
            a, g = {
                AQB: 1,
                ndh: 1,
                pf: 1,
                mid: a = Math.random().toFixed(38).split(".")[1],
                pageName: pageName,
                g: window.location.href.split("?")[0],
                server: window.location.host,
                mcorgid: config.morgId,
                v4: window.location.href + "&",
                v6: document.referrer || "datalayer field empty",
                v7: dynamicData.language,
                v8: dynamicData.countryCode,
                v9: dynamicData.OriginalClientUrl,
                v11: window.location.hash + "&",
                v12: window.location.protocol + "//" + window.location.host + window.location.pathname,
                v13: window.location.search.split("?")[1],
                v18: document.title,
                v122: "EUR",
                v131: a.slice(-2).toString(),
                v132: window.navigator.userAgent,
                v133: a,
                v134: "web",
                c1: pageName,
                c3: "onepage",
                c4: "login/registration",
                c12: +new Date,
                c13: dynamicData.brand,
                c14: l.getUTCHours() + ":" + l.getUTCMinutes() + ":" + l.getUTCSeconds(),
                c15: l.getHours() + ":" + l.getMinutes() + ":" + l.getSeconds(),
                c19: "onepage",
                c40: loginStatus,
                c41: "standalone",
                c42: dynamicData.clientName,
                c43: "crm",
                c66: window.screen.width * window.devicePixelRatio,
                c67: window.screen.height * window.devicePixelRatio,
                c68: window.screen.width >= window.screen.height ? "landscape" : "portrait"
            };
        v("tl") && (g.v0 = g.v61 = g.v62 = v("tl")), v("icp") && (g.v63 = v("icp")), v("cid") && (g.v171 = v("cid")), v("bid") && (g.v172 = v("bid")), 255 < d.length && (g.v5 = d.substring(255, d.length)), "undefined" != typeof _satellite && (g.c71 = (((_satellite || "").buildInfo || "").buildDate || "") || 'datalayer field empty', g.c72 = s.visitor.version, g.c73 = s.version, g.c74 = "datalayer field empty | Consentless Tracking"), null != typeof window.processingWrapper && window.processingWrapper && "function" == typeof window.processingWrapper._getProcessingInfo && (d = window.processingWrapper._getProcessingInfo("BaseTracking", {
            type: window.processingWrapper.ENUM.TRACKINGINFO.TYPE.FULL,
            format: window.processingWrapper.ENUM.TRACKINGINFO.FORMAT.AASD2
        }), g.c60 = d.drawer, g.c61 = d.identities, g.c62 = d.settings, g.c63 = d.defaults, g.c64 = d.consents), "page" == type ? g.events = "event998" : "event" == type && "error" == n ? (g.c52 = dynamicData.errorCause, g.c53 = dynamicData.errorType, g.c55 = dynamicData.errorCode, g.v71 = dynamicData.errorUrl, g.c56 = "error", g.c57 = dynamicData.errorAction, g.v34 = config.prefix + dynamicData.errorMessage, g.events = "event917,event918,event931", g.pe = "lnk_o", g.pev2 = "clicked") : "event" == type && (g.c52 = "default", g.c53 = "ux", g.c56 = "interaction", g.c57 = "internal click", g.v34 = config.prefix + n, g.events = "event917,event918", g.pe = "lnk_o", g.pev2 = "clicked"), g.AQE = 1;
        for (var p = 0; p <= Object.keys(g).length - 1; p++) i.push(encodeURIComponent(Object.keys(g)[p]) + "=" + encodeURIComponent(g[Object.keys(g)[p]]));
        return c + i.join("&")
    }
    function sendServerCall(e) {
        if(e.search(/(email)%3D(.*?)%26/)){
            e = e.replaceAll(/(email)%3D(.*?)%26/g,"email%3DPII_removed%26")
        };
        if (console.log("sending error details to Analytics", e), "function" == typeof navigator.sendBeacon) return navigator.sendBeacon(e);
        try {
            var r = new XMLHttpRequest;
            return r.open("GET", e, !0), r.send(), !0
        } catch (e) {
            return console.log(e), !1
        }
    }
    return config = {
        prefix: "one > ",
        trackingServer: "bmwag.d3.sc.omtrdc.net",
        reportSuite: "bmwgroup.consentless.global.all",
        morgId: "B52D1CFE5330949C0A490D45%40AdobeOrg"
    }, {
        page: function(e, r) {
            try {
                if ((e = e || document.title) && r) return sendServerCall(createServerCall(e, r, "page"));
                console.error("Missing Mandatory Parameters")
            } catch (e) {
                console.error(e)
            }
        },
        event: function(eventName, loginStatus, dynamicData) {
            try {
                var n = dynamicData && dynamicData.pageName ? dynamicData.pageName : document.title;
                if (eventName && void 0 !== eventName && loginStatus) return sendServerCall(n = "error" == eventName ? createServerCall(n, loginStatus, "event", eventName, dynamicData) : createServerCall(n, loginStatus, "event", eventName));
                console.error("Missing Mandatory Parameters")
            } catch (e) {
                console.error(e)
            }
        },
        error: function(pageName, input) {
            try {
                var dynamicData = input;
                dynamicData.pageName = pageName, input && void 0 !== input && input.loginStatus ? (dynamicData = input, onepageConsentlessTracking.event("error", input.loginStatus, dynamicData)) : console.error("Missing Mandatory Parameters")
            } catch (e) {
                console.error(e)
            }
        }
    }
}();